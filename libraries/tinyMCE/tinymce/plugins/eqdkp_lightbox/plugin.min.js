/**
 * plugin.js
 *
 * Copyright, Moxiecode Systems AB
 * Released under LGPL License.
 *
 * License: http://www.tinymce.com/license
 * Contributing: http://www.tinymce.com/contributing
 */

/*global tinymce:true */

tinymce.PluginManager.add('eqdkp_lightbox', function(editor) {
	function showDialog() {
		var win, data, dom = editor.dom, imgElm = editor.selection.getNode();
		var width, height, imageListCtrl;

		function buildImageList() {
			var linkImageItems = [{text: 'None', value: ''}];

			tinymce.each(editor.settings.image_list, function(link) {
				linkImageItems.push({
					text: link.text || link.title,
					value: link.value || link.url,
					menu: link.menu
				});
			});

			return linkImageItems;
		}

		function recalcSize(e) {
			var widthCtrl, heightCtrl, newWidth, newHeight;

			widthCtrl = win.find('#width')[0];
			heightCtrl = win.find('#height')[0];

			newWidth = widthCtrl.value();
			newHeight = heightCtrl.value();

			if (win.find('#constrain')[0].checked() && width && height && newWidth && newHeight) {
				if (e.control == widthCtrl) {
					newHeight = Math.round((newWidth / width) * newHeight);
					heightCtrl.value(newHeight);
				} else {
					newWidth = Math.round((newHeight / height) * newWidth);
					widthCtrl.value(newWidth);
				}
			}

			width = newWidth;
			height = newHeight;
		}

		width = dom.getAttrib(imgElm, 'width');
		height = dom.getAttrib(imgElm, 'height');

		if (imgElm.nodeName == "IMG" && !imgElm.getAttribute('data-mce-object')) {
			data = {
				src: dom.getAttrib(imgElm, 'src'),
				alt: dom.getAttrib(imgElm, 'alt'),
				width: tinymce_eqdkp_lightbox_thumbnailsize,
				height: height
			};
		} else {
			imgElm = null;
			data = {
				width: tinymce_eqdkp_lightbox_thumbnailsize
			};
		}

		if (editor.settings.image_list) {
			imageListCtrl = {
				name: 'target',
				type: 'listbox',
				label: 'Image list',
				values: buildImageList(),
				onselect: function(e) {
					var altCtrl = win.find('#alt');

					if (!altCtrl.value() || (e.lastControl && altCtrl.value() == e.lastControl.text())) {
						altCtrl.value(e.control.text());
					}

					win.find('#src').value(e.control.value());
				}
			};
		}

		win = editor.windowManager.open({
			title: "Create Thumbnail",
			data: data,
			body: [
				{name: 'src', type: 'filepicker', filetype: 'image', label: 'Source', autofocus: true},
				imageListCtrl,
				{name: 'alt', type: 'textbox', label: 'Image description'},
				{
					type: 'container',
					label: 'Dimensions',
					layout: 'flex',
					direction: 'row',
					align: 'center',
					spacing: 5,
					items: [
						{name: 'width', type: 'textbox', maxLength: 3, size: 3, onchange: recalcSize},
						{type: 'label', text: 'px'},
					]
				}
			],
			onSubmit: function(e) {
				var data = e.data;
				if (data.src != ''){
					jQuery.post(editor.baseURI.source+"/plugins/eqdkp_lightbox/create_thumbnail.php"+mmocms_sid, { img: data.src, width: data.width }, function(retdata){
						if(retdata.status == 'ok'){
							editor.insertContent('<a href="'+retdata.image+'" class="lightbox"><img src="'+retdata.thumb+'" alt="'+data.alt+'" loading="lazy"/></a>');
						} else {
							alert('Error on creating Thumbnail.');
						}
					}, "json");
				}
				
			}
		});
	}

	editor.addButton('eqdkp_lightbox', {
		icon: 'zoom-in',
		tooltip: 'Create Thumbnail',
		onclick: showDialog,
	});

	editor.addMenuItem('eqdkp_lightbox', {
		icon: 'zoom-in',
		text: 'Create Image Thumbnail',
		onclick: showDialog,
		context: 'insert',
		prependToContext: true
	});
});